{"version":3,"file":"svg-datatable.js","sources":["../src/svg-datatable.ts"],"sourcesContent":["// src/svg-datatable.ts\n\n/**\n * 数据列的配置接口\n * @interface\n */\ninterface Column {\n  /** 列标题，显示在表头 */\n  title?: string;\n  /** 数据字段名，用于映射数据 */\n  field?: string;\n  /** 列宽度（像素），默认为 100 */\n  width?: number;\n  /** 自定义单元格渲染函数 */\n  renderer?: (value: any, row: RowData, rowIndex: number, colIndex: number) => string;\n}\n\n/**\n * 行数据接口，键值对形式\n * @interface\n */\ninterface RowData {\n  /** 任意键值对，字段名对应列的 field */\n  [key: string]: any;\n}\n\n/**\n * SVGDataTable 的配置选项\n * @interface\n */\ninterface Options {\n  /** 表格宽度（像素），默认 800 */\n  width?: number;\n  /** 表格高度（像素），默认 400 */\n  height?: number;\n  /** 行高（像素），默认 30 */\n  rowHeight?: number;\n  /** 表头高度（像素），默认 40 */\n  headerHeight?: number;\n  /** 字体大小（像素），默认 12 */\n  fontSize?: number;\n  /** 列定义数组 */\n  columns?: Column[];\n  /** 数据数组 */\n  data?: RowData[];\n  /** 固定列数量，默认 0 */\n  fixedColumns?: number;\n  /** 是否固定表头，默认 true */\n  fixedHeader?: boolean;\n  /** 水平滚动位置，默认 0 */\n  scrollX?: number;\n  /** 垂直滚动位置，默认 0 */\n  scrollY?: number;\n  /** 启用虚拟滚动的行数阈值，默认 50 */\n  virtualThreshold?: number;\n  /** 缓冲区大小（行数），默认 10 */\n  bufferSize?: number;\n  /** 渲染防抖时间（毫秒），默认 10 */\n  debounceRender?: number;\n  /** 是否启用调试模式，默认 false */\n  debug?: boolean;\n  /** 是否启用水平虚拟化，默认基于列数自动判断 */\n  horizontalVirtualization?: boolean;\n}\n\n/**\n * 单元格位置接口\n * @interface\n */\ninterface CellPosition {\n  /** 行索引 */\n  rowIndex: number;\n  /** 列索引 */\n  colIndex: number;\n}\n\n/**\n * SVGDataTable 是一个基于 SVG 的高性能表格组件，支持虚拟滚动、单元格选择和数据复制。\n * 适用于大规模数据展示，提供固定列、表头、滚动和自定义渲染等功能。\n * @example\n * const table = new SVGDataTable('#app', {\n *   columns: [{ title: 'ID', field: 'id', width: 100 }],\n *   data: [{ id: 1 }],\n *   fixedColumns: 1\n * });\n */\nclass SVGDataTable {\n  /** 表格容器元素 */\n  private container: HTMLElement;\n  /** 配置选项，带有默认值 */\n  private options: Required<Options>;\n  /** SVG 命名空间 */\n  private svgNS: string = \"http://www.w3.org/2000/svg\";\n  /** SVG 根元素 */\n  private svg: SVGSVGElement;\n  /** SVG 定义元素，用于渐变和剪切路径 */\n  private defs: SVGDefsElement;\n  /** 当前可见的行数据 */\n  private visibleRows: RowData[] = [];\n  /** 可见行的起始索引 */\n  private visibleRowsStart: number = 0;\n  /** 可见行的结束索引 */\n  private visibleRowsEnd: number = 0;\n  /** 表格总宽度 */\n  private totalWidth: number = 0;\n  /** 表格总高度 */\n  private totalHeight: number = 0;\n  /** 固定列的总宽度 */\n  private fixedColumnsWidth: number = 0;\n  /** 可滚动区域的宽度 */\n  private scrollableWidth: number = 0;\n  /** 可滚动区域的高度 */\n  private scrollableHeight: number = 0;\n  /** 最大水平滚动距离 */\n  private maxScrollX: number = 0;\n  /** 最大垂直滚动距离 */\n  private maxScrollY: number = 0;\n  /** 渲染防抖定时器 ID */\n  private renderTimer: number | null = null;\n  /** 滚轮事件处理函数 */\n  private wheelHandler: (e: WheelEvent) => void;\n  /** 调试信息文本元素 */\n  private debugInfo?: SVGTextElement;\n  /** 背景图层组 */\n  private backgroundGroup!: SVGGElement;\n  /** 内容图层组 */\n  private contentGroup!: SVGGElement;\n  /** 固定列图层组 */\n  private fixedColumnsGroup?: SVGGElement;\n  /** 表头图层组 */\n  private headerGroup!: SVGGElement;\n  /** 固定表头图层组 */\n  private fixedHeaderGroup?: SVGGElement;\n  /** 阴影图层组 */\n  private shadowGroup!: SVGGElement;\n  /** 内容容器组 */\n  private contentContainer?: SVGGElement;\n  /** 固定列容器组 */\n  private fixedColumnsContainer?: SVGGElement;\n  /** 表头容器组 */\n  private headerContainer?: SVGGElement;\n  /** 容器大小监听器 */\n  private resizeObserver?: ResizeObserver;\n  /** 触摸起始 X 坐标 */\n  private touchStartX: number = 0;\n  /** 触摸起始 Y 坐标 */\n  private touchStartY: number = 0;\n  /** 触摸时的初始 scrollX */\n  private touchStartScrollX: number = 0;\n  /** 触摸时的初始 scrollY */\n  private touchStartScrollY: number = 0;\n  /** 当前高亮的行索引 */\n  private highlightedRow?: number;\n  /** 动画帧 ID */\n  private rafId?: number;\n  /** 选中的单元格集合 */\n  private selectedCells: Set<string> = new Set();\n  /** 选择起始单元格 */\n  private startCell: CellPosition | null = null;\n  /** 是否正在拖动选择 */\n  private isDragging: boolean = false;\n\n  /**\n   * 创建 SVGDataTable 实例\n   * @param container 表格容器，可以是选择器字符串或 HTMLElement\n   * @param options 配置选项，详见 {@link Options}\n   * @throws {Error} 如果容器未找到则抛出错误\n   */\n  constructor(container: string | HTMLElement, options: Options = {}) {\n    this.container = typeof container === 'string' ? document.querySelector(container) as HTMLElement : container;\n    if (!this.container) throw new Error('Container not found');\n\n    this.options = {\n      width: options.width || 800,\n      height: options.height || 400,\n      rowHeight: options.rowHeight || 30,\n      headerHeight: options.headerHeight || 40,\n      fontSize: options.fontSize || 12,\n      columns: options.columns || [],\n      data: options.data || [],\n      fixedColumns: options.fixedColumns || 0,\n      fixedHeader: options.fixedHeader !== false,\n      scrollX: options.scrollX || 0,\n      scrollY: options.scrollY || 0,\n      virtualThreshold: options.virtualThreshold || 50,\n      bufferSize: options.bufferSize || 10,\n      debounceRender: options.debounceRender || 10,\n      debug: options.debug || false,\n      horizontalVirtualization: options.horizontalVirtualization !== false && (options.columns?.length || 0) > 20,\n    };\n\n    this.wheelHandler = this.handleWheel.bind(this);\n    this.svg = document.createElementNS(this.svgNS, \"svg\") as SVGSVGElement;\n    this.defs = document.createElementNS(this.svgNS, \"defs\") as SVGDefsElement;\n\n    this.init();\n  }\n\n  /**\n   * 初始化表格，包括尺寸计算、SVG 结构创建和事件绑定\n   * @private\n   */\n  private init(): void {\n    this.calculateDimensions();\n    this.svg.setAttribute(\"width\", this.options.width.toString());\n    this.svg.setAttribute(\"height\", this.options.height.toString());\n    this.svg.setAttribute(\"class\", \"svg-datatable\");\n    this.container.appendChild(this.svg);\n\n    this.svg.appendChild(this.defs);\n    this.createShadowGradients();\n    this.createClipPaths();\n    this.createGroups();\n    this.render();\n    this.setupEventHandlers();\n    this.setupCellSelectionHandlers();\n    this.setupCopyHandler();\n\n    if (this.options.debug) {\n      this.debugInfo = document.createElementNS(this.svgNS, \"text\") as SVGTextElement;\n      this.debugInfo.setAttribute(\"x\", \"10\");\n      this.debugInfo.setAttribute(\"y\", (this.options.height - 10).toString());\n      this.debugInfo.setAttribute(\"font-size\", \"10\");\n      this.debugInfo.setAttribute(\"fill\", \"#666\");\n      this.svg.appendChild(this.debugInfo);\n    }\n  }\n\n  /**\n   * 计算表格的各种尺寸参数，包括总宽高、可滚动区域等\n   * @private\n   */\n  private calculateDimensions(): void {\n    this.totalWidth = this.options.columns.reduce((sum, col) => sum + (col.width || 100), 0);\n    this.totalHeight = this.options.rowHeight * this.options.data.length + this.options.headerHeight;\n    this.fixedColumnsWidth = 0;\n    for (let i = 0; i < this.options.fixedColumns && i < this.options.columns.length; i++) {\n      this.fixedColumnsWidth += this.options.columns[i].width || 100;\n    }\n    this.scrollableWidth = this.options.width - this.fixedColumnsWidth;\n    this.scrollableHeight = this.options.height - this.options.headerHeight;\n    this.maxScrollX = Math.max(0, this.totalWidth - this.fixedColumnsWidth - this.scrollableWidth);\n    this.maxScrollY = Math.max(0, this.totalHeight - this.options.headerHeight - this.scrollableHeight);\n    if (this.totalWidth <= this.options.width) this.maxScrollX = 0;\n    if (this.totalHeight <= this.options.height) this.maxScrollY = 0;\n  }\n\n  /**\n   * 创建阴影渐变，用于固定列和表头的视觉效果\n   * @private\n   */\n  private createShadowGradients(): void {\n    const hGradient = document.createElementNS(this.svgNS, \"linearGradient\") as SVGLinearGradientElement;\n    hGradient.setAttribute(\"id\", \"shadow-gradient-h\");\n    hGradient.setAttribute(\"x1\", \"0%\");\n    hGradient.setAttribute(\"y1\", \"0%\");\n    hGradient.setAttribute(\"x2\", \"100%\");\n    hGradient.setAttribute(\"y2\", \"0%\");\n    const hStop1 = document.createElementNS(this.svgNS, \"stop\") as SVGStopElement;\n    hStop1.setAttribute(\"offset\", \"0%\");\n    hStop1.setAttribute(\"stop-color\", \"rgba(0,0,0,0.3)\");\n    hStop1.setAttribute(\"stop-opacity\", \"1\");\n    const hStop2 = document.createElementNS(this.svgNS, \"stop\") as SVGStopElement;\n    hStop2.setAttribute(\"offset\", \"100%\");\n    hStop2.setAttribute(\"stop-color\", \"rgba(0,0,0,0)\");\n    hStop2.setAttribute(\"stop-opacity\", \"0\");\n    hGradient.appendChild(hStop1);\n    hGradient.appendChild(hStop2);\n    this.defs.appendChild(hGradient);\n\n    const vGradient = document.createElementNS(this.svgNS, \"linearGradient\") as SVGLinearGradientElement;\n    vGradient.setAttribute(\"id\", \"shadow-gradient-v\");\n    vGradient.setAttribute(\"x1\", \"0%\");\n    vGradient.setAttribute(\"y1\", \"0%\");\n    vGradient.setAttribute(\"x2\", \"0%\");\n    vGradient.setAttribute(\"y2\", \"100%\");\n    const vStop1 = document.createElementNS(this.svgNS, \"stop\") as SVGStopElement;\n    vStop1.setAttribute(\"offset\", \"0%\");\n    vStop1.setAttribute(\"stop-color\", \"rgba(0,0,0,0.3)\");\n    vStop1.setAttribute(\"stop-opacity\", \"1\");\n    const vStop2 = document.createElementNS(this.svgNS, \"stop\") as SVGStopElement;\n    vStop2.setAttribute(\"offset\", \"100%\");\n    vStop2.setAttribute(\"stop-color\", \"rgba(0,0,0,0)\");\n    vStop2.setAttribute(\"stop-opacity\", \"0\");\n    vGradient.appendChild(vStop1);\n    vGradient.appendChild(vStop2);\n    this.defs.appendChild(vGradient);\n  }\n\n  /**\n   * 创建剪切路径，用于限制内容显示区域\n   * @private\n   */\n  private createClipPaths(): void {\n    this.createClipPath(\"content-clip\", this.fixedColumnsWidth, this.options.headerHeight, this.scrollableWidth, this.scrollableHeight);\n    if (this.options.fixedColumns > 0) {\n      this.createClipPath(\"fixed-columns-clip\", 0, this.options.headerHeight, this.fixedColumnsWidth, this.scrollableHeight);\n      this.createClipPath(\"fixed-header-clip\", 0, 0, this.fixedColumnsWidth, this.options.headerHeight);\n    }\n    this.createClipPath(\"header-clip\", this.fixedColumnsWidth, 0, this.scrollableWidth, this.options.headerHeight);\n  }\n\n  /**\n   * 创建单个剪切路径\n   * @param id 剪切路径的 ID\n   * @param x X 坐标\n   * @param y Y 坐标\n   * @param width 宽度\n   * @param height 高度\n   * @private\n   */\n  private createClipPath(id: string, x: number, y: number, width: number, height: number): void {\n    const clipPath = document.createElementNS(this.svgNS, \"clipPath\") as SVGClipPathElement;\n    clipPath.setAttribute(\"id\", id);\n    const rect = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n    rect.setAttribute(\"x\", x.toString());\n    rect.setAttribute(\"y\", y.toString());\n    rect.setAttribute(\"width\", width.toString());\n    rect.setAttribute(\"height\", height.toString());\n    clipPath.appendChild(rect);\n    this.defs.appendChild(clipPath);\n  }\n\n  /**\n   * 创建 SVG 图层组，包括背景、内容、固定列等\n   * @private\n   */\n  private createGroups(): void {\n    this.backgroundGroup = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n    this.backgroundGroup.setAttribute(\"class\", \"datatable-background\");\n    this.svg.appendChild(this.backgroundGroup);\n\n    this.contentGroup = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n    this.contentGroup.setAttribute(\"clip-path\", \"url(#content-clip)\");\n    this.contentGroup.setAttribute(\"class\", \"datatable-content\");\n    this.svg.appendChild(this.contentGroup);\n\n    if (this.options.fixedColumns > 0) {\n      this.fixedColumnsGroup = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n      this.fixedColumnsGroup.setAttribute(\"clip-path\", \"url(#fixed-columns-clip)\");\n      this.fixedColumnsGroup.setAttribute(\"class\", \"datatable-fixed-columns\");\n      this.svg.appendChild(this.fixedColumnsGroup);\n    }\n\n    this.headerGroup = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n    this.headerGroup.setAttribute(\"clip-path\", \"url(#header-clip)\");\n    this.headerGroup.setAttribute(\"class\", \"datatable-header\");\n    this.svg.appendChild(this.headerGroup);\n\n    if (this.options.fixedColumns > 0) {\n      this.fixedHeaderGroup = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n      this.fixedHeaderGroup.setAttribute(\"clip-path\", \"url(#fixed-header-clip)\");\n      this.fixedHeaderGroup.setAttribute(\"class\", \"datatable-fixed-header\");\n      this.svg.appendChild(this.fixedHeaderGroup);\n    }\n\n    this.shadowGroup = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n    this.shadowGroup.setAttribute(\"class\", \"datatable-shadows\");\n    this.svg.appendChild(this.shadowGroup);\n  }\n\n  /**\n   * 设置事件监听器，包括滚轮、触摸和窗口大小调整\n   * @private\n   */\n  private setupEventHandlers(): void {\n    this.container.addEventListener('wheel', this.wheelHandler, { passive: false });\n    if (typeof ResizeObserver !== 'undefined') {\n      this.resizeObserver = new ResizeObserver(() => this.handleResize());\n      this.resizeObserver.observe(this.container);\n    }\n    this.container.addEventListener('touchstart', this.handleTouchStart.bind(this), { passive: false });\n    this.container.addEventListener('touchmove', this.handleTouchMove.bind(this), { passive: false });\n  }\n\n  /**\n   * 处理容器大小变化，调整表格尺寸并重新渲染\n   * @private\n   */\n  private handleResize(): void {\n    const rect = this.svg.getBoundingClientRect();\n    if (rect.width !== this.options.width || rect.height !== this.options.height) {\n      this.options.width = rect.width;\n      this.options.height = rect.height;\n      this.calculateDimensions();\n      this.svg.setAttribute(\"width\", this.options.width.toString());\n      this.svg.setAttribute(\"height\", this.options.height.toString());\n      this.defs.innerHTML = '';\n      this.createShadowGradients();\n      this.createClipPaths();\n      this.render();\n    }\n  }\n\n  /**\n   * 处理触摸开始事件，记录起始位置\n   * @param e 触摸事件\n   * @private\n   */\n  private handleTouchStart(e: TouchEvent): void {\n    e.preventDefault();\n    const touch = e.touches[0];\n    this.touchStartX = touch.clientX;\n    this.touchStartY = touch.clientY;\n    this.touchStartScrollX = this.options.scrollX;\n    this.touchStartScrollY = this.options.scrollY;\n  }\n\n  /**\n   * 处理触摸移动事件，更新滚动位置\n   * @param e 触摸事件\n   * @private\n   */\n  private handleTouchMove(e: TouchEvent): void {\n    e.preventDefault();\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      const deltaX = this.touchStartX - touch.clientX;\n      const deltaY = this.touchStartY - touch.clientY;\n      this.scroll(this.touchStartScrollX + deltaX, this.touchStartScrollY + deltaY);\n    }\n  }\n\n  /**\n   * 处理滚轮事件，调整滚动位置\n   * @param e 滚轮事件\n   * @private\n   */\n  private handleWheel(e: WheelEvent): void {\n    e.preventDefault();\n    let deltaX = e.deltaX;\n    let deltaY = e.deltaY;\n    if (e.shiftKey) {\n      deltaX += deltaY;\n      deltaY = 0;\n    }\n    const speedFactor = e.ctrlKey ? 5 : 1;\n    this.scroll(this.options.scrollX + deltaX * speedFactor, this.options.scrollY + deltaY * speedFactor);\n  }\n\n  /**\n   * 计算当前可见的列索引（水平虚拟化）\n   * @returns 可见列的索引数组\n   * @private\n   */\n  private calculateVisibleColumns(): number[] {\n    const startX = this.options.scrollX;\n    const endX = startX + this.scrollableWidth;\n    const visibleColumnIndices: number[] = [];\n    const bufferWidth = this.scrollableWidth * 0.5;\n    const bufferedStartX = Math.max(0, startX - bufferWidth);\n    const bufferedEndX = Math.min(this.totalWidth, endX + bufferWidth);\n\n    let accumulatedWidth = this.fixedColumnsWidth;\n    for (let i = this.options.fixedColumns; i < this.options.columns.length; i++) {\n      const colWidth = this.options.columns[i].width || 100;\n      const colStart = accumulatedWidth;\n      const colEnd = colStart + colWidth;\n      if (colEnd > bufferedStartX && colStart < bufferedEndX) {\n        visibleColumnIndices.push(i);\n      }\n      accumulatedWidth += colWidth;\n    }\n    return visibleColumnIndices;\n  }\n\n  /**\n   * 执行滚动操作，更新位置并触发渲染\n   * @param scrollX 目标水平滚动位置\n   * @param scrollY 目标垂直滚动位置\n   * @private\n   */\n  private scroll(scrollX: number, scrollY: number): void {\n    scrollX = Math.max(0, Math.min(scrollX, this.maxScrollX));\n    scrollY = Math.max(0, Math.min(scrollY, this.maxScrollY));\n    if (this.options.scrollX === scrollX && this.options.scrollY === scrollY) return;\n\n    const deltaX = Math.abs(scrollX - this.options.scrollX);\n    this.options.scrollX = scrollX;\n    this.options.scrollY = scrollY;\n    this.updateScrollPosition();\n\n    const largeHorizontalScroll = deltaX > (this.scrollableWidth * 0.3);\n    if (largeHorizontalScroll) {\n      if (this.renderTimer) clearTimeout(this.renderTimer);\n      this.renderTimer = null;\n      this.render();\n    } else {\n      if (this.renderTimer) clearTimeout(this.renderTimer);\n      this.renderTimer = setTimeout(() => this.render(), this.options.debounceRender);\n    }\n  }\n\n  /**\n   * 更新滚动位置，应用变换\n   * @private\n   */\n  private updateScrollPosition(): void {\n    if (this.contentContainer) {\n      this.contentContainer.setAttribute('transform', `translate(${-this.options.scrollX}, ${-this.options.scrollY})`);\n    }\n    if (this.headerContainer) {\n      this.headerContainer.setAttribute('transform', `translate(${-this.options.scrollX}, 0)`);\n    }\n    if (this.fixedColumnsContainer) {\n      this.fixedColumnsContainer.setAttribute('transform', `translate(0, ${-this.options.scrollY})`);\n    }\n    if (this.options.debug && this.debugInfo) {\n      this.debugInfo.textContent = `Scroll: ${Math.round(this.options.scrollX)}, ${Math.round(this.options.scrollY)} | Rows: ${this.visibleRowsStart}-${this.visibleRowsEnd} (${this.visibleRows.length}) | Selected: ${this.selectedCells.size}`;\n    }\n  }\n\n  /**\n   * 滚动到指定行\n   * @param rowIndex 目标行索引\n   */\n  public scrollToRow(rowIndex: number): void {\n    const y = rowIndex * this.options.rowHeight;\n    this.scroll(this.options.scrollX, y);\n  }\n\n  /**\n   * 滚动到指定单元格\n   * @param rowIndex 目标行索引\n   * @param colIndex 目标列索引\n   */\n  public scrollToCell(rowIndex: number, colIndex: number): void {\n    const y = rowIndex * this.options.rowHeight;\n    let x = 0;\n    for (let i = 0; i < colIndex && i < this.options.columns.length; i++) {\n      if (i >= this.options.fixedColumns) x += this.options.columns[i].width || 100;\n    }\n    this.scroll(x, y);\n  }\n\n  /**\n   * 计算当前可见的行数据（垂直虚拟化）\n   * @private\n   */\n  private calculateVisibleRows(): void {\n    const startY = this.options.scrollY;\n    const endY = startY + this.scrollableHeight;\n    let start = Math.floor(startY / this.options.rowHeight);\n    let end = Math.ceil(endY / this.options.rowHeight);\n    start = Math.max(0, start - this.options.bufferSize);\n    end = Math.min(this.options.data.length, end + this.options.bufferSize);\n    if (this.options.data.length <= this.options.virtualThreshold) {\n      start = 0;\n      end = this.options.data.length;\n    }\n    this.visibleRowsStart = start;\n    this.visibleRowsEnd = end;\n    this.visibleRows = this.options.data.slice(start, end);\n  }\n\n  /**\n   * 渲染表格，包括内容、固定列、表头和阴影\n   */\n  public render(): void {\n    this.calculateVisibleRows();\n    this.contentGroup.innerHTML = '';\n    if (this.fixedColumnsGroup) this.fixedColumnsGroup.innerHTML = '';\n    this.headerGroup.innerHTML = '';\n    if (this.fixedHeaderGroup) this.fixedHeaderGroup.innerHTML = '';\n    this.shadowGroup.innerHTML = '';\n\n    this.renderContent();\n    if (this.options.fixedColumns > 0) this.renderFixedColumns();\n    this.renderHeader();\n    if (this.options.fixedColumns > 0) this.renderFixedHeader();\n    this.renderShadows();\n\n    if (this.options.debug && this.debugInfo) {\n      this.debugInfo.textContent = `Scroll: ${Math.round(this.options.scrollX)}, ${Math.round(this.options.scrollY)} | Rows: ${this.visibleRowsStart}-${this.visibleRowsEnd} (${this.visibleRows.length}) | Selected: ${this.selectedCells.size}`;\n    }\n  }\n\n  /**\n   * 渲染表格内容区域\n   * @private\n   */\n  private renderContent(): void {\n    const contentContainer = this.contentContainer = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n    this.contentContainer.setAttribute(\"transform\", `translate(${-this.options.scrollX}, ${-this.options.scrollY})`);\n    this.contentGroup.appendChild(this.contentContainer);\n\n    this.visibleRows.forEach((row, localIndex) => {\n      const rowIndex = localIndex + this.visibleRowsStart;\n      const yPos = rowIndex * this.options.rowHeight + this.options.headerHeight;\n\n      const rowBg = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n      rowBg.setAttribute(\"x\", this.fixedColumnsWidth.toString());\n      rowBg.setAttribute(\"y\", yPos.toString());\n      rowBg.setAttribute(\"width\", (this.totalWidth - this.fixedColumnsWidth).toString());\n      rowBg.setAttribute(\"height\", this.options.rowHeight.toString());\n      rowBg.setAttribute(\"fill\", rowIndex % 2 === 0 ? \"#ffffff\" : \"#f9f9f9\");\n      contentContainer.appendChild(rowBg);\n\n      if (this.options.horizontalVirtualization) {\n        const visibleColumnIndices = this.calculateVisibleColumns();\n        visibleColumnIndices.forEach(colIndex => {\n          this.renderCell(row, rowIndex, colIndex, yPos, this.contentContainer!);\n        });\n      } else {\n        for (let colIndex = this.options.fixedColumns; colIndex < this.options.columns.length; colIndex++) {\n          this.renderCell(row, rowIndex, colIndex, yPos, this.contentContainer!);\n        }\n      }\n    });\n  }\n\n  /**\n   * 渲染单个单元格\n   * @param row 行数据\n   * @param rowIndex 行索引\n   * @param colIndex 列索引\n   * @param yPos Y 坐标\n   * @param container 渲染目标容器\n   * @private\n   */\n  private renderCell(row: RowData, rowIndex: number, colIndex: number, yPos: number, container: SVGGElement): void {\n    const column = this.options.columns[colIndex];\n    const width = column.width || 100;\n    let xPos = colIndex < this.options.fixedColumns ? 0 : this.fixedColumnsWidth;\n    for (let i = (colIndex < this.options.fixedColumns ? 0 : this.options.fixedColumns); i < colIndex; i++) {\n      xPos += this.options.columns[i].width || 100;\n    }\n\n    const cellBorder = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n    cellBorder.setAttribute(\"x\", xPos.toString());\n    cellBorder.setAttribute(\"y\", yPos.toString());\n    cellBorder.setAttribute(\"width\", width.toString());\n    cellBorder.setAttribute(\"height\", this.options.rowHeight.toString());\n    cellBorder.setAttribute(\"fill\", this.selectedCells.has(`${rowIndex}-${colIndex}`) ? \"#cce5ff\" : \"transparent\");\n    cellBorder.setAttribute(\"stroke\", \"#e0e0e0\");\n    cellBorder.setAttribute(\"stroke-width\", \"0.5\");\n    cellBorder.setAttribute(\"data-row\", rowIndex.toString());\n    cellBorder.setAttribute(\"data-col\", colIndex.toString());\n    container.appendChild(cellBorder);\n\n    const text = document.createElementNS(this.svgNS, \"text\") as SVGTextElement;\n    text.setAttribute(\"x\", (xPos + 5).toString());\n    text.setAttribute(\"y\", (yPos + this.options.rowHeight / 2).toString());\n    text.setAttribute(\"dominant-baseline\", \"middle\");\n    text.setAttribute(\"font-size\", this.options.fontSize.toString());\n    const field = column.field || `field${colIndex}`;\n    const cellValue = row[field] !== undefined ? row[field] : '';\n    text.textContent = column.renderer ? column.renderer(cellValue, row, rowIndex, colIndex) : cellValue.toString();\n    container.appendChild(text);\n  }\n\n  /**\n   * 渲染固定列区域\n   * @private\n   */\n  private renderFixedColumns(): void {\n    if (this.options.fixedColumns <= 0) return;\n    const fixedColumnsContainer = this.fixedColumnsContainer = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n    this.fixedColumnsContainer.setAttribute(\"transform\", `translate(0, ${-this.options.scrollY})`);\n    this.fixedColumnsGroup!.appendChild(this.fixedColumnsContainer);\n\n    this.visibleRows.forEach((row, localIndex) => {\n      const rowIndex = localIndex + this.visibleRowsStart;\n      const yPos = rowIndex * this.options.rowHeight + this.options.headerHeight;\n\n      const rowBg = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n      rowBg.setAttribute(\"x\", \"0\");\n      rowBg.setAttribute(\"y\", yPos.toString());\n      rowBg.setAttribute(\"width\", this.fixedColumnsWidth.toString());\n      rowBg.setAttribute(\"height\", this.options.rowHeight.toString());\n      rowBg.setAttribute(\"fill\", rowIndex % 2 === 0 ? \"#f0f8ff\" : \"#e6f7ff\");\n      rowBg.setAttribute(\"stroke\", \"#d0d0d0\");\n      rowBg.setAttribute(\"stroke-width\", \"0.5\");\n      fixedColumnsContainer.appendChild(rowBg);\n\n      let xPos = 0;\n      for (let colIndex = 0; colIndex < this.options.fixedColumns && colIndex < this.options.columns.length; colIndex++) {\n        const column = this.options.columns[colIndex];\n        const width = column.width || 100;\n        this.renderCell(row, rowIndex, colIndex, yPos, fixedColumnsContainer);\n        xPos += width;\n      }\n    });\n  }\n\n  /**\n   * 渲染表头区域\n   * @private\n   */\n  private renderHeader(): void {\n    const headerBg = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n    headerBg.setAttribute(\"x\", this.fixedColumnsWidth.toString());\n    headerBg.setAttribute(\"y\", \"0\");\n    headerBg.setAttribute(\"width\", this.scrollableWidth.toString());\n    headerBg.setAttribute(\"height\", this.options.headerHeight.toString());\n    headerBg.setAttribute(\"fill\", \"#f5f5f5\");\n    headerBg.setAttribute(\"stroke\", \"#d0d0d0\");\n    headerBg.setAttribute(\"stroke-width\", \"0.5\");\n    this.headerGroup.appendChild(headerBg);\n\n    this.headerContainer = document.createElementNS(this.svgNS, \"g\") as SVGGElement;\n    this.headerContainer.setAttribute(\"transform\", `translate(${-this.options.scrollX}, 0)`);\n    this.headerGroup.appendChild(this.headerContainer);\n\n    const fullHeaderBg = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n    fullHeaderBg.setAttribute(\"x\", this.fixedColumnsWidth.toString());\n    fullHeaderBg.setAttribute(\"y\", \"0\");\n    fullHeaderBg.setAttribute(\"width\", (this.totalWidth - this.fixedColumnsWidth).toString());\n    fullHeaderBg.setAttribute(\"height\", this.options.headerHeight.toString());\n    fullHeaderBg.setAttribute(\"fill\", \"#f5f5f5\");\n    this.headerContainer.appendChild(fullHeaderBg);\n\n    if (this.options.horizontalVirtualization) {\n      const visibleColumnIndices = this.calculateVisibleColumns();\n      visibleColumnIndices.forEach(colIndex => this.renderHeaderCell(colIndex));\n    } else {\n      for (let colIndex = this.options.fixedColumns; colIndex < this.options.columns.length; colIndex++) {\n        this.renderHeaderCell(colIndex);\n      }\n    }\n  }\n\n  /**\n   * 渲染单个表头单元格\n   * @param colIndex 列索引\n   * @private\n   */\n  private renderHeaderCell(colIndex: number): void {\n    const column = this.options.columns[colIndex];\n    const width = column.width || 100;\n    let xPos = this.fixedColumnsWidth;\n    for (let i = this.options.fixedColumns; i < colIndex; i++) {\n      xPos += this.options.columns[i].width || 100;\n    }\n\n    const colBorder = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n    colBorder.setAttribute(\"x\", xPos.toString());\n    colBorder.setAttribute(\"y\", \"0\");\n    colBorder.setAttribute(\"width\", width.toString());\n    colBorder.setAttribute(\"height\", this.options.headerHeight.toString());\n    colBorder.setAttribute(\"fill\", \"transparent\");\n    colBorder.setAttribute(\"stroke\", \"#d0d0d0\");\n    colBorder.setAttribute(\"stroke-width\", \"0.5\");\n    this.headerContainer!.appendChild(colBorder);\n\n    const text = document.createElementNS(this.svgNS, \"text\") as SVGTextElement;\n    text.setAttribute(\"x\", (xPos + width / 2).toString());\n    text.setAttribute(\"y\", (this.options.headerHeight / 2).toString());\n    text.setAttribute(\"text-anchor\", \"middle\");\n    text.setAttribute(\"dominant-baseline\", \"middle\");\n    text.setAttribute(\"font-size\", this.options.fontSize.toString());\n    text.setAttribute(\"font-weight\", \"bold\");\n    text.textContent = column.title || `Column ${colIndex + 1}`;\n    this.headerContainer!.appendChild(text);\n  }\n\n  /**\n   * 渲染固定表头区域\n   * @private\n   */\n  private renderFixedHeader(): void {\n    if (this.options.fixedColumns <= 0) return;\n\n    const fixedHeaderBg = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n    fixedHeaderBg.setAttribute(\"x\", \"0\");\n    fixedHeaderBg.setAttribute(\"y\", \"0\");\n    fixedHeaderBg.setAttribute(\"width\", this.fixedColumnsWidth.toString());\n    fixedHeaderBg.setAttribute(\"height\", this.options.headerHeight.toString());\n    fixedHeaderBg.setAttribute(\"fill\", \"#e6f7ff\");\n    fixedHeaderBg.setAttribute(\"stroke\", \"#d0d0d0\");\n    fixedHeaderBg.setAttribute(\"stroke-width\", \"0.5\");\n    this.fixedHeaderGroup!.appendChild(fixedHeaderBg);\n\n    let xPos = 0;\n    for (let colIndex = 0; colIndex < this.options.fixedColumns && colIndex < this.options.columns.length; colIndex++) {\n      const column = this.options.columns[colIndex];\n      const width = column.width || 100;\n\n      const colBg = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n      colBg.setAttribute(\"x\", xPos.toString());\n      colBg.setAttribute(\"y\", \"0\");\n      colBg.setAttribute(\"width\", width.toString());\n      colBg.setAttribute(\"height\", this.options.headerHeight.toString());\n      colBg.setAttribute(\"fill\", \"#e6f7ff\");\n      colBg.setAttribute(\"stroke\", \"#d0d0d0\");\n      colBg.setAttribute(\"stroke-width\", \"0.5\");\n      this.fixedHeaderGroup!.appendChild(colBg);\n\n      const text = document.createElementNS(this.svgNS, \"text\") as SVGTextElement;\n      text.setAttribute(\"x\", (xPos + width / 2).toString());\n      text.setAttribute(\"y\", (this.options.headerHeight / 2).toString());\n      text.setAttribute(\"text-anchor\", \"middle\");\n      text.setAttribute(\"dominant-baseline\", \"middle\");\n      text.setAttribute(\"font-size\", this.options.fontSize.toString());\n      text.setAttribute(\"font-weight\", \"bold\");\n      text.textContent = column.title || `Column ${colIndex + 1}`;\n      this.fixedHeaderGroup!.appendChild(text);\n\n      xPos += width;\n    }\n  }\n\n  /**\n   * 渲染固定列和表头的阴影效果\n   * @private\n   */\n  private renderShadows(): void {\n    if (this.options.fixedColumns > 0) {\n      const columnShadow = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n      columnShadow.setAttribute(\"x\", this.fixedColumnsWidth.toString());\n      columnShadow.setAttribute(\"y\", \"0\");\n      columnShadow.setAttribute(\"width\", \"5\");\n      columnShadow.setAttribute(\"height\", this.options.height.toString());\n      columnShadow.setAttribute(\"fill\", \"url(#shadow-gradient-h)\");\n      columnShadow.setAttribute(\"pointer-events\", \"none\");\n      this.shadowGroup.appendChild(columnShadow);\n    }\n\n    const headerShadow = document.createElementNS(this.svgNS, \"rect\") as SVGRectElement;\n    headerShadow.setAttribute(\"x\", \"0\");\n    headerShadow.setAttribute(\"y\", this.options.headerHeight.toString());\n    headerShadow.setAttribute(\"width\", this.options.width.toString());\n    headerShadow.setAttribute(\"height\", \"5\");\n    headerShadow.setAttribute(\"fill\", \"url(#shadow-gradient-v)\");\n    headerShadow.setAttribute(\"pointer-events\", \"none\");\n    this.shadowGroup.appendChild(headerShadow);\n  }\n\n  /**\n   * 更新表格数据并重新渲染\n   * @param data 新的数据数组\n   */\n  public updateData(data: RowData[]): void {\n    this.options.data = data || [];\n    this.calculateDimensions();\n    this.options.scrollX = Math.min(this.options.scrollX, this.maxScrollX);\n    this.options.scrollY = Math.min(this.options.scrollY, this.maxScrollY);\n    this.render();\n  }\n\n  /**\n   * 更新列定义并重新渲染\n   * @param columns 新的列定义数组\n   */\n  public updateColumns(columns: Column[]): void {\n    this.options.columns = columns || [];\n    this.calculateDimensions();\n    this.options.scrollX = Math.min(this.options.scrollX, this.maxScrollX);\n    this.options.scrollY = Math.min(this.options.scrollY, this.maxScrollY);\n    this.render();\n  }\n\n  /**\n   * 设置固定列数量并重新初始化\n   * @param count 固定列的数量\n   */\n  public setFixedColumns(count: number): void {\n    count = Math.min(count, this.options.columns.length);\n    if (this.options.fixedColumns !== count) {\n      this.options.fixedColumns = count;\n      this.destroy();\n      this.init();\n    }\n  }\n\n  /**\n   * 获取 SVG 元素\n   * @returns SVG 根元素\n   */\n  public getElement(): SVGSVGElement {\n    return this.svg;\n  }\n\n  /**\n   * 销毁表格，移除事件监听器并清理 DOM\n   */\n  public destroy(): void {\n    this.container.removeEventListener('wheel', this.wheelHandler);\n    this.container.removeEventListener('touchstart', this.handleTouchStart);\n    this.container.removeEventListener('touchmove', this.handleTouchMove);\n    this.container.removeEventListener('mousedown', this.handleMouseDown);\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseup', this.handleMouseUp);\n    document.removeEventListener('keydown', this.handleKeyDown);\n    if (this.resizeObserver) this.resizeObserver.disconnect();\n    this.container.innerHTML = '';\n    if (this.renderTimer) clearTimeout(this.renderTimer);\n    if (this.rafId) cancelAnimationFrame(this.rafId);\n  }\n\n  /**\n   * 使用 requestAnimationFrame 渲染表格\n   */\n  public renderWithRAF(): void {\n    if (this.rafId) cancelAnimationFrame(this.rafId);\n    this.rafId = requestAnimationFrame(() => this.render());\n  }\n\n  /**\n   * 更新指定单元格的值并重新渲染\n   * @param updates 单元格更新数组\n   */\n  public updateCells(updates: { row: number; col: number; value: any }[]): void {\n    let needsRender = false;\n    updates.forEach(update => {\n      const { row, col, value } = update;\n      if (row >= 0 && row < this.options.data.length && col >= 0 && col < this.options.columns.length) {\n        const column = this.options.columns[col];\n        const field = column.field || `field${col}`;\n        this.options.data[row][field] = value;\n        if (row >= this.visibleRowsStart && row < this.visibleRowsEnd) needsRender = true;\n      }\n    });\n    if (needsRender) this.render();\n  }\n\n  /**\n   * 高亮指定行\n   * @param rowIndex 行索引，-1 表示取消高亮\n   * @param color 高亮颜色，默认为 #FFFECC\n   */\n  public highlightRow(rowIndex: number, color: string = \"#FFFECC\"): void {\n    if (this.highlightedRow !== undefined) {\n      const elements = this.svg.querySelectorAll(`.highlight-row-${this.highlightedRow}`);\n      elements.forEach(el => {\n        el.setAttribute(\"fill\", el.getAttribute(\"data-original-fill\") || \"\");\n        el.classList.remove(`highlight-row-${this.highlightedRow}`);\n      });\n    }\n    this.highlightedRow = rowIndex;\n    if (rowIndex < 0) return;\n\n    const yPos = rowIndex * this.options.rowHeight + this.options.headerHeight;\n    const isVisible = rowIndex >= this.visibleRowsStart && rowIndex < this.visibleRowsEnd;\n    if (!isVisible) {\n      this.scrollToRow(rowIndex);\n      return;\n    }\n\n    const mainRowBgs = this.contentContainer!.querySelectorAll(`rect[y=\"${yPos}\"]`);\n    mainRowBgs.forEach(el => {\n      el.setAttribute(\"data-original-fill\", el.getAttribute(\"fill\") || \"\");\n      el.setAttribute(\"fill\", color);\n      el.classList.add(`highlight-row-${rowIndex}`);\n    });\n\n    if (this.fixedColumnsContainer) {\n      const fixedRowBgs = this.fixedColumnsContainer.querySelectorAll(`rect[y=\"${yPos}\"]`);\n      fixedRowBgs.forEach(el => {\n        el.setAttribute(\"data-original-fill\", el.getAttribute(\"fill\") || \"\");\n        el.setAttribute(\"fill\", color);\n        el.classList.add(`highlight-row-${rowIndex}`);\n      });\n    }\n  }\n\n  /**\n   * 设置单元格选择事件监听器\n   * @private\n   */\n  private setupCellSelectionHandlers(): void {\n    this.container.addEventListener('mousedown', this.handleMouseDown.bind(this));\n    document.addEventListener('mousemove', this.handleMouseMove.bind(this));\n    document.addEventListener('mouseup', this.handleMouseUp.bind(this));\n  }\n\n  /**\n   * 根据屏幕坐标获取单元格位置\n   * @param x X 坐标\n   * @param y Y 坐标\n   * @returns 单元格位置或 null\n   * @private\n   */\n  private getCellFromPosition(x: number, y: number): CellPosition | null {\n    const rect = this.svg.getBoundingClientRect();\n    const adjustedY = y - rect.top + this.options.scrollY - this.options.headerHeight;\n    const adjustedX = x - rect.left + this.options.scrollX;\n\n    const rowIndex = Math.floor(adjustedY / this.options.rowHeight);\n    if (rowIndex < 0 || rowIndex >= this.options.data.length) return null;\n\n    let colIndex = -1;\n    let accumulatedWidth = 0;\n    for (let i = 0; i < this.options.columns.length; i++) {\n      const colWidth = this.options.columns[i].width || 100;\n      if (adjustedX >= accumulatedWidth && adjustedX < accumulatedWidth + colWidth) {\n        colIndex = i;\n        break;\n      }\n      accumulatedWidth += colWidth;\n    }\n    if (colIndex === -1) return null;\n\n    return { rowIndex, colIndex };\n  }\n\n  /**\n   * 选择指定范围的单元格并重新渲染\n   * @param start 起始单元格\n   * @param end 结束单元格\n   * @private\n   */\n  private selectRange(start: CellPosition, end: CellPosition): void {\n    this.selectedCells.clear();\n    const minRow = Math.min(start.rowIndex, end.rowIndex);\n    const maxRow = Math.max(start.rowIndex, end.rowIndex);\n    const minCol = Math.min(start.colIndex, end.colIndex);\n    const maxCol = Math.max(start.colIndex, end.colIndex);\n\n    for (let row = minRow; row <= maxRow; row++) {\n      for (let col = minCol; col <= maxCol; col++) {\n        this.selectedCells.add(`${row}-${col}`);\n      }\n    }\n    this.render();\n  }\n\n  /**\n   * 处理鼠标按下事件，开始单元格选择\n   * @param e 鼠标事件\n   * @private\n   */\n  private handleMouseDown(e: MouseEvent): void {\n    if (e.button !== 0) return; // 只处理左键\n    const cell = this.getCellFromPosition(e.clientX, e.clientY);\n    if (!cell || e.clientY - this.svg.getBoundingClientRect().top < this.options.headerHeight) return;\n\n    if (e.shiftKey && this.startCell) {\n      this.selectRange(this.startCell, cell);\n    } else {\n      this.selectedCells.clear();\n      this.selectedCells.add(`${cell.rowIndex}-${cell.colIndex}`);\n      this.startCell = cell;\n      this.isDragging = true;\n      this.render();\n    }\n  }\n\n  /**\n   * 处理鼠标移动事件，更新选择范围\n   * @param e 鼠标事件\n   * @private\n   */\n  private handleMouseMove(e: MouseEvent): void {\n    if (!this.isDragging || !this.startCell) return;\n\n    const cell = this.getCellFromPosition(e.clientX, e.clientY);\n    if (cell) {\n      this.selectRange(this.startCell, cell);\n    }\n  }\n\n  /**\n   * 处理鼠标松开事件，结束选择\n   * @param e 鼠标事件\n   * @private\n   */\n  private handleMouseUp(_e: MouseEvent): void {\n    this.isDragging = false;\n  }\n\n  /**\n   * 设置复制快捷键监听器\n   * @private\n   */\n  private setupCopyHandler(): void {\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n\n  /**\n   * 处理键盘事件，支持 Ctrl+C 和 Command+C 复制\n   * @param e 键盘事件\n   * @private\n   */\n  private handleKeyDown = (e: KeyboardEvent): void => {\n    if ((e.ctrlKey || e.metaKey) && e.key === 'c' && this.selectedCells.size > 0) {\n      e.preventDefault();\n      this.copySelectedCells();\n    }\n  };\n\n  /**\n   * 复制选中的单元格数据到剪贴板\n   * @param includeHeaders 是否包含表头，默认为 true\n   * @private\n   */\n  private copySelectedCells(includeHeaders: boolean = true): void {\n    const selected = this.getSelectedCells();\n    if (selected.length === 0) return;\n\n    const rows = new Set<number>();\n    const cols = new Set<number>();\n    selected.forEach(cell => {\n      rows.add(cell.rowIndex);\n      cols.add(cell.colIndex);\n    });\n    const rowIndices = Array.from(rows).sort((a, b) => a - b);\n    const colIndices = Array.from(cols).sort((a, b) => a - b);\n\n    let copyData: string[][] = [];\n    if (includeHeaders) {\n      const headerRow = colIndices.map(colIndex => \n        this.options.columns[colIndex].title || `Column ${colIndex + 1}`\n      );\n      copyData.push(headerRow);\n    }\n\n    rowIndices.forEach(rowIndex => {\n      const rowData = colIndices.map(colIndex => {\n        const column = this.options.columns[colIndex];\n        const field = column.field || `field${colIndex}`;\n        const cellValue = this.options.data[rowIndex][field] !== undefined ? this.options.data[rowIndex][field] : '';\n        return column.renderer ? column.renderer(cellValue, this.options.data[rowIndex], rowIndex, colIndex) : cellValue.toString();\n      });\n      copyData.push(rowData);\n    });\n\n    const text = copyData.map(row => row.join('\\t')).join('\\n');\n    navigator.clipboard.writeText(text).then(() => {\n      if (this.options.debug) {\n        console.log('Copied to clipboard:', text);\n      }\n    }).catch(err => {\n      console.error('Failed to copy:', err);\n    });\n  }\n\n  /**\n   * 获取当前选中的单元格\n   * @returns 包含行索引和列索引的单元格位置数组\n   */\n  public getSelectedCells(): CellPosition[] {\n    return Array.from(this.selectedCells).map(key => {\n      const [rowIndex, colIndex] = key.split('-').map(Number);\n      return { rowIndex, colIndex };\n    });\n  }\n\n  /**\n   * 清除所有单元格选择并重新渲染\n   */\n  public clearSelection(): void {\n    this.selectedCells.clear();\n    this.startCell = null;\n    this.render();\n  }\n\n  /**\n   * 复制选中的单元格数据到剪贴板\n   * @param includeHeaders 是否包含表头，默认为 true\n   */\n  public copy(includeHeaders: boolean = true): void {\n    this.copySelectedCells(includeHeaders);\n  }\n\n  /**\n   * 设置指定列的自定义渲染函数\n   * @param columnIndex 列索引\n   * @param renderer 渲染函数\n   */\n  public setCellRenderer(columnIndex: number, renderer: (value: any, row: RowData, rowIndex: number, colIndex: number) => string): void {\n    if (columnIndex >= 0 && columnIndex < this.options.columns.length) {\n      this.options.columns[columnIndex].renderer = renderer;\n      this.render();\n    }\n  }\n\n  /**\n   * 导出表格为 SVG 字符串\n   * @returns SVG 字符串\n   */\n  public exportSVG(): string {\n    const exportSvg = this.svg.cloneNode(true) as SVGSVGElement;\n    exportSvg.setAttribute(\"xmlns\", this.svgNS);\n    exportSvg.setAttribute(\"version\", \"1.1\");\n    return new XMLSerializer().serializeToString(exportSvg);\n  }\n\n  /**\n   * 获取当前可见的数据行\n   * @returns 可见的行数据数组\n   */\n  public getVisibleData(): RowData[] {\n    return this.visibleRows;\n  }\n\n  /**\n   * 获取所有数据\n   * @returns 完整的行数据数组\n   */\n  public getData(): RowData[] {\n    return this.options.data;\n  }\n\n  /**\n   * 获取表格状态\n   * @returns 包含滚动位置、可见行范围和尺寸信息的对象\n   */\n  public getState(): {\n    scrollX: number;\n    scrollY: number;\n    visibleRowsRange: [number, number];\n    fixedColumns: number;\n    dimensions: {\n      totalWidth: number;\n      totalHeight: number;\n      fixedColumnsWidth: number;\n      scrollableWidth: number;\n      scrollableHeight: number;\n    };\n  } {\n    return {\n      scrollX: this.options.scrollX,\n      scrollY: this.options.scrollY,\n      visibleRowsRange: [this.visibleRowsStart, this.visibleRowsEnd],\n      fixedColumns: this.options.fixedColumns,\n      dimensions: {\n        totalWidth: this.totalWidth,\n        totalHeight: this.totalHeight,\n        fixedColumnsWidth: this.fixedColumnsWidth,\n        scrollableWidth: this.scrollableWidth,\n        scrollableHeight: this.scrollableHeight,\n      },\n    };\n  }\n}\n\nexport default SVGDataTable;"],"names":[],"mappings":"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"}